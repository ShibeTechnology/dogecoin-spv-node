(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{344:function(e,t,a){"use strict";a.r(t);var s=a(25),n=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[e._v("#")]),e._v(" Development")]),e._v(" "),t("h2",{attrs:{id:"structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#structure"}},[e._v("#")]),e._v(" Structure")]),e._v(" "),t("p",[e._v("The project structure is the following:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("/bin/**")]),e._v(" files for the CLI")]),e._v(" "),t("li",[t("code",[e._v("/documentation/**")]),e._v(" the documentation files")]),e._v(" "),t("li",[t("code",[e._v("/provision/**")]),e._v(" dogecoind dockerfile for quick dev setup")]),e._v(" "),t("li",[t("code",[e._v("/src/**")]),e._v(" all the sources files for the core logic of the application\n"),t("ul",[t("li",[t("code",[e._v("commands/")]),e._v(" the messages used by the node to communicate with other nodes (serialize/deserialize functions)")]),e._v(" "),t("li",[t("code",[e._v("interface/")]),e._v(" it is the User Interface, the "),t("strong",[e._v("Interface")]),e._v(" class manage the differents "),t("s",[e._v("screens")]),e._v(" and navigation")]),e._v(" "),t("li",[t("code",[e._v("paymentchannel/")]),e._v(" the payment channel logic")]),e._v(" "),t("li",[t("code",[e._v("spvnode/")]),e._v(" the Simplified Payment Verification node logic (handle connections to peers, syncing, etc...)")]),e._v(" "),t("li",[t("code",[e._v("store/")]),e._v(" a store for the "),t("strong",[e._v("wallet/node")]),e._v(" that can be used in as a source of information in the "),t("strong",[e._v("interface")])]),e._v(" "),t("li",[t("code",[e._v("wallet/")]),e._v(" the wallet logic (signing, storing transactions and keys...)")])])]),e._v(" "),t("li",[t("code",[e._v("/test/**")]),e._v(" testing logic\n"),t("ul",[t("li",[t("code",[e._v("integration/")]),e._v(" tests using Dogecoin in regtest")]),e._v(" "),t("li",[t("code",[e._v("test_vectors/")]),e._v(" json files used in testing")]),e._v(" "),t("li",[t("code",[e._v("tools/")]),e._v(" some scripts used during development")]),e._v(" "),t("li",[t("code",[e._v("unit/")]),e._v(" unit tests")])])])]),e._v(" "),t("h2",{attrs:{id:"start-developing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-developing"}},[e._v("#")]),e._v(" Start developing")]),e._v(" "),t("h3",{attrs:{id:"pre-requisite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisite"}},[e._v("#")]),e._v(" Pre-requisite")]),e._v(" "),t("p",[e._v("Install "),t("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("NodeJS Version 16"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"setup-dev-environment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup-dev-environment"}},[e._v("#")]),e._v(" Setup dev environment")]),e._v(" "),t("p",[e._v("Install npm dependencies")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ npm install\n")])])]),t("p",[e._v("Build the dogecoind docker image")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ make build-regtest\n")])])]),t("p",[e._v("Start the dogecoind container in regtest mode")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ make regtest\n")])])]),t("p",[e._v("Generate some blocks")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ make generate count=150\n")])])]),t("h3",{attrs:{id:"start-the-wallet-in-regtest-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-the-wallet-in-regtest-mode"}},[e._v("#")]),e._v(" Start the wallet in regtest mode")]),e._v(" "),t("p",[e._v("You can start the wallet in regtest mode by specifying the "),t("code",[e._v("NETWORK")]),e._v(" envrionment variable to "),t("code",[e._v("regtest")]),e._v(" and "),t("code",[e._v("DEV")]),e._v(" to "),t("code",[e._v("true")]),e._v(" to create a local folder with all the data.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ NETWORK=regtest DEV=true npm start\n")])])]),t("p",[e._v("In an other terminal you can check the logs by reading the "),t("code",[e._v("stdout.log")]),e._v(" file.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ tail -f stoud.log\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);